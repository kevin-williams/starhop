{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ApolloClient, HttpLink, InMemoryCache } from 'apollo-boost';\nimport fetch from 'isomorphic-unfetch';\n\nvar hopData = require('../db/hopData.json');\n\nvar messier = require('../db/messier.json');\n\nvar starCatalog = require('../db/hygfull.json');\n\nvar resolvers = {\n  Query: {\n    hops: function hops() {},\n    dsos: function dsos(obj, args, context, info) {\n      console.log('getting Dsos', args.input);\n      var _args$input = args.input,\n          raFrom = _args$input.raFrom,\n          raTo = _args$input.raTo,\n          decFrom = _args$input.decFrom,\n          decTo = _args$input.decTo;\n      return messier.dsos.filter(function (dso) {\n        return Number(dso.ra) >= raFrom && Number(dso.ra) <= raTo && Number(dso.dec) >= decFrom && Number(dso.dec) <= decTo;\n      });\n    },\n    stars: function stars(obj, args, context, info) {\n      console.log('getting stars', args.input);\n      var _args$input2 = args.input,\n          raFrom = _args$input2.raFrom,\n          raTo = _args$input2.raTo,\n          decFrom = _args$input2.decFrom,\n          decTo = _args$input2.decTo;\n      return starCatalog.stars.filter(function (stars) {\n        return Number(stars.ra) >= raFrom && Number(stars.ra) <= raTo && Number(stars.dec) >= decFrom && Number(stars.dec) <= decTo;\n      });\n    }\n  }\n};\nvar defaults = {\n  hopSelection: {\n    __typename: 'hopSelection'\n  },\n  location: {\n    ra: 0,\n    dec: 0,\n    __typename: 'location'\n  }\n};\nexport var client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    fetch: fetch\n  }),\n  resolvers: resolvers\n});\nexport default client;\n\nvar reset = function reset() {\n  client.writeData({\n    data: _objectSpread({}, defaults)\n  });\n};\n\nreset();\nclient.onResetStore(function () {\n  return reset();\n});","map":{"version":3,"sources":["/Users/kwilliams/repositories/starhop/utils/apolloClient.js"],"names":["ApolloClient","HttpLink","InMemoryCache","fetch","hopData","require","messier","starCatalog","resolvers","Query","hops","dsos","obj","args","context","info","console","log","input","raFrom","raTo","decFrom","decTo","filter","dso","Number","ra","dec","stars","defaults","hopSelection","__typename","location","client","cache","link","reset","writeData","data","onResetStore"],"mappings":"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","sourcesContent":["import { ApolloClient, HttpLink, InMemoryCache } from 'apollo-boost';\nimport fetch from 'isomorphic-unfetch';\n\nconst hopData = require('../db/hopData.json');\nconst messier = require('../db/messier.json');\nconst starCatalog = require('../db/hygfull.json');\n\nconst resolvers = {\n  Query: {\n    hops: () => {},\n    dsos: (obj, args, context, info) => {\n      console.log('getting Dsos', args.input);\n      const { raFrom, raTo, decFrom, decTo } = args.input;\n      return messier.dsos.filter(\n        dso =>\n          Number(dso.ra) >= raFrom &&\n          Number(dso.ra) <= raTo &&\n          Number(dso.dec) >= decFrom &&\n          Number(dso.dec) <= decTo\n      );\n    },\n    stars: (obj, args, context, info) => {\n      console.log('getting stars', args.input);\n      const { raFrom, raTo, decFrom, decTo } = args.input;\n      return starCatalog.stars.filter(\n        stars =>\n          Number(stars.ra) >= raFrom &&\n          Number(stars.ra) <= raTo &&\n          Number(stars.dec) >= decFrom &&\n          Number(stars.dec) <= decTo\n      );\n    }\n  }\n};\n\nconst defaults = {\n  hopSelection: {\n    __typename: 'hopSelection'\n  },\n  location: {\n    ra: 0,\n    dec: 0,\n    __typename: 'location'\n  }\n};\n\nexport const client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({ fetch }),\n  resolvers\n});\n\nexport default client;\n\nconst reset = () => {\n  client.writeData({\n    data: {\n      ...defaults\n    }\n  });\n};\n\nreset();\n\nclient.onResetStore(() => reset());\n"]},"metadata":{},"sourceType":"module"}