{"ast":null,"code":"var _jsxFileName = \"/Users/kwilliams/repositories/starhop/pages/HopSelection.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport { MdBlurCircular } from 'react-icons/md';\nimport Header from '../styles/Header';\nimport NavBar from '../components/NavBar';\nconst DATA_QUERY = gql`\n  query dsos($rangeInput: Object!) {\n    dsos(input: $rangeInput) @client\n    stars(input: $rangeInput) @client\n  }\n`;\nconst SELECTION_QUERY = gql`\n  query {\n    hops @client\n  }\n`;\nconst HopDiv = styled.div.withConfig({\n  displayName: \"HopSelection__HopDiv\",\n  componentId: \"gxte0x-0\"\n})([\"display:grid;grid-template-columns:1fr 2fr 5fr 2fr;margin:50px;justify-items:center;align-items:center;\"]);\nconst Difficulty = styled(MdBlurCircular).withConfig({\n  displayName: \"HopSelection__Difficulty\",\n  componentId: \"gxte0x-1\"\n})([\"color:\", \";\"], props => props.difficulty === 'easy' ? 'green' : props.difficulty === 'medium' ? 'yellow' : 'red');\n\nconst HopSelection = () => {\n  const {\n    client,\n    data,\n    loading\n  } = useQuery(SELECTION_QUERY, {\n    variables: {\n      rangeInput: {\n        raFrom: 1,\n        raTo: 5,\n        decFrom: 0,\n        decTo: 50\n      }\n    }\n  });\n  console.log('data', data);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), __jsx(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), !loading && data.hops.map(hop => __jsx(HopDiv, {\n    key: hop.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, hop.id), __jsx(Difficulty, {\n    size: 20,\n    difficulty: hop.difficulty,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, hop.description), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Select\")))));\n};\n\nexport default HopSelection;","map":{"version":3,"sources":["/Users/kwilliams/repositories/starhop/pages/HopSelection.js"],"names":["React","Link","styled","gql","useQuery","MdBlurCircular","Header","NavBar","DATA_QUERY","SELECTION_QUERY","HopDiv","div","Difficulty","props","difficulty","HopSelection","client","data","loading","variables","rangeInput","raFrom","raTo","decFrom","decTo","console","log","hops","map","hop","id","description"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,MAAMC,UAAU,GAAGL,GAAI;;;;;CAAvB;AAOA,MAAMM,eAAe,GAAGN,GAAI;;;;CAA5B;AAMA,MAAMO,MAAM,GAAGR,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,+GAAZ;AAQA,MAAMC,UAAU,GAAGV,MAAM,CAACG,cAAD,CAAT;AAAA;AAAA;AAAA,oBACLQ,KAAK,IACZA,KAAK,CAACC,UAAN,KAAqB,MAArB,GACI,OADJ,GAEID,KAAK,CAACC,UAAN,KAAqB,QAArB,GACA,QADA,GAEA,KANQ,CAAhB;;AASA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,MAA4Bd,QAAQ,CAACK,eAAD,EAAkB;AAC1DU,IAAAA,SAAS,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,MAAM,EAAE,CAAV;AAAaC,QAAAA,IAAI,EAAE,CAAnB;AAAsBC,QAAAA,OAAO,EAAE,CAA/B;AAAkCC,QAAAA,KAAK,EAAE;AAAzC;AAAd;AAD+C,GAAlB,CAA1C;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBT,IAApB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGG,CAACC,OAAD,IACCD,IAAI,CAACU,IAAL,CAAUC,GAAV,CAAcC,GAAG,IACf,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,GAAG,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,GAAG,CAACC,EAAX,CADF,EAEE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAE,EAAlB;AAAsB,IAAA,UAAU,EAAED,GAAG,CAACf,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOe,GAAG,CAACE,WAAX,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAJF,CADF,CAJJ,CADF;AAiBD,CAxBD;;AA0BA,eAAehB,YAAf","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport { MdBlurCircular } from 'react-icons/md';\n\nimport Header from '../styles/Header';\nimport NavBar from '../components/NavBar';\n\nconst DATA_QUERY = gql`\n  query dsos($rangeInput: Object!) {\n    dsos(input: $rangeInput) @client\n    stars(input: $rangeInput) @client\n  }\n`;\n\nconst SELECTION_QUERY = gql`\n  query {\n    hops @client\n  }\n`;\n\nconst HopDiv = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 2fr 5fr 2fr;\n  margin: 50px;\n  justify-items: center;\n  align-items: center;\n`;\n\nconst Difficulty = styled(MdBlurCircular)`\n  color: ${props =>\n    props.difficulty === 'easy'\n      ? 'green'\n      : props.difficulty === 'medium'\n      ? 'yellow'\n      : 'red'};\n`;\n\nconst HopSelection = () => {\n  const { client, data, loading } = useQuery(SELECTION_QUERY, {\n    variables: { rangeInput: { raFrom: 1, raTo: 5, decFrom: 0, decTo: 50 } }\n  });\n\n  console.log('data', data);\n\n  return (\n    <div>\n      <Header />\n      <NavBar />\n      {!loading &&\n        data.hops.map(hop => (\n          <HopDiv key={hop.id}>\n            <span>{hop.id}</span>\n            <Difficulty size={20} difficulty={hop.difficulty} />\n            <span>{hop.description}</span>\n            <span>\n              <button>Select</button>\n            </span>\n          </HopDiv>\n        ))}\n    </div>\n  );\n};\n\nexport default HopSelection;\n"]},"metadata":{},"sourceType":"module"}