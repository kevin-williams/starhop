{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/kwilliams/repositories/starhop/components/starmap/StarMap.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query dsos($rangeInput: Object!) {\\n    dsos(input: $rangeInput) @client\\n    stars(input: $rangeInput) @client\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport styled from 'styled-components';\nimport Star from './Star';\nvar StarMapCanvas = styled.svg.withConfig({\n  displayName: \"StarMap__StarMapCanvas\",\n  componentId: \"sc-1wurmqy-0\"\n})([\"background-color:black;\"]);\nvar DATA_QUERY = gql(_templateObject());\n\nvar StarMap = function StarMap(_ref) {\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? {} : _ref$size,\n      mapRange = _ref.mapRange,\n      mapParams = _ref.mapParams;\n  var _size$width = size.width,\n      width = _size$width === void 0 ? 500 : _size$width,\n      _size$height = size.height,\n      height = _size$height === void 0 ? 500 : _size$height;\n  var raFrom = mapRange.raFrom,\n      raTo = mapRange.raTo,\n      decFrom = mapRange.decFrom,\n      decTo = mapRange.decTo;\n\n  var _useQuery = useQuery(DATA_QUERY, {\n    variables: {\n      rangeInput: {\n        raFrom: raFrom,\n        raTo: raTo,\n        decFrom: decFrom,\n        decTo: decTo\n      }\n    }\n  }),\n      client = _useQuery.client,\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      refetch = _useQuery.refetch;\n\n  !loading && console.log('stars=', data.stars);\n  return __jsx(StarMapCanvas, {\n    fill: \"lightGrey\",\n    width: width,\n    height: height,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"defs\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(\"radialGradient\", {\n    id: \"StarGradient\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"stop\", {\n    offset: \"0%\",\n    stopColor: \"lightGrey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), __jsx(\"stop\", {\n    offset: \"100%\",\n    stopColor: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), __jsx(\"clipPath\", {\n    id: \"viewport\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"circle\", {\n    cx: 200,\n    cy: 200,\n    r: 200,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))), !loading && data.stars.map(function (star, index) {\n    if (Number(star.mag) > mapParams.limitingMag) return null;\n    return __jsx(Star, {\n      key: \"star-\".concat(index),\n      star: star,\n      mapRange: mapRange,\n      clipPath: \"viewport\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default StarMap;","map":{"version":3,"sources":["/Users/kwilliams/repositories/starhop/components/starmap/StarMap.js"],"names":["gql","useQuery","styled","Star","StarMapCanvas","svg","DATA_QUERY","StarMap","size","mapRange","mapParams","width","height","raFrom","raTo","decFrom","decTo","variables","rangeInput","client","data","loading","refetch","console","log","stars","map","star","index","Number","mag","limitingMag"],"mappings":"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","sourcesContent":["import { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport styled from 'styled-components';\n\nimport Star from './Star';\n\nconst StarMapCanvas = styled.svg`\n  background-color: black;\n`;\n\nconst DATA_QUERY = gql`\n  query dsos($rangeInput: Object!) {\n    dsos(input: $rangeInput) @client\n    stars(input: $rangeInput) @client\n  }\n`;\n\nconst StarMap = ({ size = {}, mapRange, mapParams }) => {\n  const { width = 500, height = 500 } = size;\n  const { raFrom, raTo, decFrom, decTo } = mapRange;\n\n  const { client, data, loading, refetch } = useQuery(DATA_QUERY, {\n    variables: { rangeInput: { raFrom, raTo, decFrom, decTo } }\n  });\n\n  !loading && console.log('stars=', data.stars);\n\n  return (\n    <StarMapCanvas fill=\"lightGrey\" width={width} height={height}>\n      <defs>\n        <radialGradient id=\"StarGradient\">\n          <stop offset=\"0%\" stopColor=\"lightGrey\" />\n          <stop offset=\"100%\" stopColor=\"black\" />\n        </radialGradient>\n        <clipPath id=\"viewport\">\n          <circle cx={200} cy={200} r={200} />\n        </clipPath>\n      </defs>\n\n      {!loading &&\n        data.stars.map((star, index) => {\n          if (Number(star.mag) > mapParams.limitingMag) return null;\n          return (\n            <Star\n              key={`star-${index}`}\n              star={star}\n              mapRange={mapRange}\n              clipPath=\"viewport\"\n            />\n          );\n        })}\n    </StarMapCanvas>\n  );\n};\n\nexport default StarMap;\n"]},"metadata":{},"sourceType":"module"}