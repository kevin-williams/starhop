{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ApolloClient, HttpLink, InMemoryCache } from 'apollo-boost';\nimport fetch from 'isomorphic-unfetch';\n\nconst hopData = require('../db/hopData.json');\n\nconst messier = require('../db/messier.json');\n\nconst starCatalog = require('../db/hygfull.json');\n\nconst resolvers = {\n  Query: {\n    hops: () => {\n      return hopData.hops;\n    },\n    dsos: () => {\n      return messier.dsos;\n    },\n    stars: () => {\n      return starCatalog.stars;\n    }\n  }\n};\nconst defaults = {\n  location: {\n    ra: 0,\n    dec: 0,\n    __typename: 'location'\n  },\n  selectedHop: {\n    id: '',\n    hint: '',\n    description: '',\n    difficulty: '',\n    startingLocation: [],\n    targetLocation: {\n      ra: 0,\n      dec: 0,\n      __typename: 'targetLocation'\n    },\n    __typename: 'selectedHop'\n  }\n};\nexport const client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    fetch\n  }),\n  resolvers\n});\nexport default client;\n\nconst reset = () => {\n  client.writeData({\n    data: _objectSpread({}, defaults)\n  });\n};\n\nreset();\nclient.onResetStore(() => reset());","map":{"version":3,"sources":["/Users/kwilliams/repositories/starhop/utils/apolloClient.js"],"names":["ApolloClient","HttpLink","InMemoryCache","fetch","hopData","require","messier","starCatalog","resolvers","Query","hops","dsos","stars","defaults","location","ra","dec","__typename","selectedHop","id","hint","description","difficulty","startingLocation","targetLocation","client","cache","link","reset","writeData","data","onResetStore"],"mappings":";;;;;;;;;;;;AAAA,SAASA,YAAT,EAAuBC,QAAvB,EAAiCC,aAAjC,QAAsD,cAAtD;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAAC,oBAAD,CAAvB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,oBAAD,CAAvB;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,oBAAD,CAA3B;;AAEA,MAAMG,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,MAAM;AACV,aAAON,OAAO,CAACM,IAAf;AACD,KAHI;AAILC,IAAAA,IAAI,EAAE,MAAM;AACV,aAAOL,OAAO,CAACK,IAAf;AACD,KANI;AAOLC,IAAAA,KAAK,EAAE,MAAM;AACX,aAAOL,WAAW,CAACK,KAAnB;AACD;AATI;AADS,CAAlB;AAcA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,EAAE,EAAE,CADI;AAERC,IAAAA,GAAG,EAAE,CAFG;AAGRC,IAAAA,UAAU,EAAE;AAHJ,GADK;AAMfC,EAAAA,WAAW,EAAE;AACXC,IAAAA,EAAE,EAAE,EADO;AAEXC,IAAAA,IAAI,EAAE,EAFK;AAGXC,IAAAA,WAAW,EAAE,EAHF;AAIXC,IAAAA,UAAU,EAAE,EAJD;AAKXC,IAAAA,gBAAgB,EAAE,EALP;AAMXC,IAAAA,cAAc,EAAE;AACdT,MAAAA,EAAE,EAAE,CADU;AAEdC,MAAAA,GAAG,EAAE,CAFS;AAGdC,MAAAA,UAAU,EAAE;AAHE,KANL;AAWXA,IAAAA,UAAU,EAAE;AAXD;AANE,CAAjB;AAqBA,OAAO,MAAMQ,MAAM,GAAG,IAAIzB,YAAJ,CAAiB;AACrC0B,EAAAA,KAAK,EAAE,IAAIxB,aAAJ,EAD8B;AAErCyB,EAAAA,IAAI,EAAE,IAAI1B,QAAJ,CAAa;AAAEE,IAAAA;AAAF,GAAb,CAF+B;AAGrCK,EAAAA;AAHqC,CAAjB,CAAf;AAMP,eAAeiB,MAAf;;AAEA,MAAMG,KAAK,GAAG,MAAM;AAClBH,EAAAA,MAAM,CAACI,SAAP,CAAiB;AACfC,IAAAA,IAAI,oBACCjB,QADD;AADW,GAAjB;AAKD,CAND;;AAQAe,KAAK;AAELH,MAAM,CAACM,YAAP,CAAoB,MAAMH,KAAK,EAA/B","sourcesContent":["import { ApolloClient, HttpLink, InMemoryCache } from 'apollo-boost';\nimport fetch from 'isomorphic-unfetch';\n\nconst hopData = require('../db/hopData.json');\nconst messier = require('../db/messier.json');\nconst starCatalog = require('../db/hygfull.json');\n\nconst resolvers = {\n  Query: {\n    hops: () => {\n      return hopData.hops;\n    },\n    dsos: () => {\n      return messier.dsos;\n    },\n    stars: () => {\n      return starCatalog.stars;\n    }\n  }\n};\n\nconst defaults = {\n  location: {\n    ra: 0,\n    dec: 0,\n    __typename: 'location'\n  },\n  selectedHop: {\n    id: '',\n    hint: '',\n    description: '',\n    difficulty: '',\n    startingLocation: [],\n    targetLocation: {\n      ra: 0,\n      dec: 0,\n      __typename: 'targetLocation'\n    },\n    __typename: 'selectedHop'\n  }\n};\n\nexport const client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({ fetch }),\n  resolvers\n});\n\nexport default client;\n\nconst reset = () => {\n  client.writeData({\n    data: {\n      ...defaults\n    }\n  });\n};\n\nreset();\n\nclient.onResetStore(() => reset());\n"]},"metadata":{},"sourceType":"module"}