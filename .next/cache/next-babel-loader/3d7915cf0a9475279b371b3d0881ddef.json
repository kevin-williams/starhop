{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/kwilliams/repositories/starhop/pages/HopSelection.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    hops @client\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query dsos($rangeInput: Object!) {\\n    dsos(input: $rangeInput) @client\\n    stars(input: $rangeInput) @client\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport { MdBlurCircular } from 'react-icons/md';\nimport Header from '../styles/Header';\nimport NavBar from '../components/NavBar';\nvar DATA_QUERY = gql(_templateObject());\nvar SELECTION_QUERY = gql(_templateObject2());\nvar HopDiv = styled.div.withConfig({\n  displayName: \"HopSelection__HopDiv\",\n  componentId: \"gxte0x-0\"\n})([\"display:grid;grid-template-columns:1fr 2fr 5fr 2fr;margin:50px;\"]);\nvar Difficulty = styled(MdBlurCircular).withConfig({\n  displayName: \"HopSelection__Difficulty\",\n  componentId: \"gxte0x-1\"\n})([\"color:\", \";\"], function (props) {\n  return props.difficulty === 'easy' ? 'green' : 'red';\n});\n\nvar HopSelection = function HopSelection() {\n  var _useQuery = useQuery(SELECTION_QUERY, {\n    variables: {\n      rangeInput: {\n        raFrom: 1,\n        raTo: 5,\n        decFrom: 0,\n        decTo: 50\n      }\n    }\n  }),\n      client = _useQuery.client,\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  console.log('data', data);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), __jsx(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), !loading && data.hops.map(function (hop) {\n    return __jsx(HopDiv, {\n      key: hop.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, hop.id), __jsx(Difficulty, {\n      difficulty: hop.difficulty,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, hop.difficulty), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, hop.description), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Select\")));\n  }));\n};\n\nexport default HopSelection;","map":{"version":3,"sources":["/Users/kwilliams/repositories/starhop/pages/HopSelection.js"],"names":["React","Link","styled","gql","useQuery","MdBlurCircular","Header","NavBar","DATA_QUERY","SELECTION_QUERY","HopDiv","div","Difficulty","props","difficulty","HopSelection","variables","rangeInput","raFrom","raTo","decFrom","decTo","client","data","loading","console","log","hops","map","hop","id","description"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,IAAMC,UAAU,GAAGL,GAAH,mBAAhB;AAOA,IAAMM,eAAe,GAAGN,GAAH,oBAArB;AAMA,IAAMO,MAAM,GAAGR,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,uEAAZ;AAMA,IAAMC,UAAU,GAAGV,MAAM,CAACG,cAAD,CAAT;AAAA;AAAA;AAAA,oBACL,UAAAQ,KAAK;AAAA,SAAKA,KAAK,CAACC,UAAN,KAAqB,MAArB,GAA8B,OAA9B,GAAwC,KAA7C;AAAA,CADA,CAAhB;;AAIA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,kBACSX,QAAQ,CAACK,eAAD,EAAkB;AAC1DO,IAAAA,SAAS,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,MAAM,EAAE,CAAV;AAAaC,QAAAA,IAAI,EAAE,CAAnB;AAAsBC,QAAAA,OAAO,EAAE,CAA/B;AAAkCC,QAAAA,KAAK,EAAE;AAAzC;AAAd;AAD+C,GAAlB,CADjB;AAAA,MACjBC,MADiB,aACjBA,MADiB;AAAA,MACTC,IADS,aACTA,IADS;AAAA,MACHC,OADG,aACHA,OADG;;AAKzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,IAApB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGG,CAACC,OAAD,IACCD,IAAI,CAACI,IAAL,CAAUC,GAAV,CAAc,UAAAC,GAAG;AAAA,WACf,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,GAAG,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOD,GAAG,CAACC,EAAX,CADF,EAEE,MAAC,UAAD;AAAY,MAAA,UAAU,EAAED,GAAG,CAACf,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGe,GAAG,CAACf,UADP,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOe,GAAG,CAACE,WAAX,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CANF,CADe;AAAA,GAAjB,CAJJ,CADF;AAmBD,CA1BD;;AA4BA,eAAehB,YAAf","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport { MdBlurCircular } from 'react-icons/md';\n\nimport Header from '../styles/Header';\nimport NavBar from '../components/NavBar';\n\nconst DATA_QUERY = gql`\n  query dsos($rangeInput: Object!) {\n    dsos(input: $rangeInput) @client\n    stars(input: $rangeInput) @client\n  }\n`;\n\nconst SELECTION_QUERY = gql`\n  query {\n    hops @client\n  }\n`;\n\nconst HopDiv = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 2fr 5fr 2fr;\n  margin: 50px;\n`;\n\nconst Difficulty = styled(MdBlurCircular)`\n  color: ${props => (props.difficulty === 'easy' ? 'green' : 'red')};\n`;\n\nconst HopSelection = () => {\n  const { client, data, loading } = useQuery(SELECTION_QUERY, {\n    variables: { rangeInput: { raFrom: 1, raTo: 5, decFrom: 0, decTo: 50 } }\n  });\n\n  console.log('data', data);\n\n  return (\n    <div>\n      <Header />\n      <NavBar />\n      {!loading &&\n        data.hops.map(hop => (\n          <HopDiv key={hop.id}>\n            <span>{hop.id}</span>\n            <Difficulty difficulty={hop.difficulty}>\n              {hop.difficulty}\n            </Difficulty>\n            <span>{hop.description}</span>\n            <span>\n              <button>Select</button>\n            </span>\n          </HopDiv>\n        ))}\n    </div>\n  );\n};\n\nexport default HopSelection;\n"]},"metadata":{},"sourceType":"module"}