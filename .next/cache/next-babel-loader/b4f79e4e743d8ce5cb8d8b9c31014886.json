{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/kwilliams/repositories/starhop/pages/HopSelection.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    hops @client\\n    selectedHop @client {\\n      id\\n      hint\\n      description\\n      difficulty\\n      starMapQuery {\\n        raFrom\\n        raTo\\n        decFrom\\n        decTo\\n      }\\n      startingLocation {\\n        name\\n        ra\\n        dec\\n      }\\n      targetLocation {\\n        ra\\n        dec\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport { MdBlurCircular } from 'react-icons/md';\nimport Header from '../styles/Header';\nimport NavBar from '../components/NavBar';\nimport SelectedHop from '../components/starmap/SelectedHop';\nvar SELECTION_QUERY = gql(_templateObject());\n\nvar hopToGQL = function hopToGQL(hop) {\n  var myHop = _objectSpread({}, hop, {\n    __typename: 'selectedHop'\n  });\n\n  myHop.starMapQuery.__typename = 'starMapQuery';\n  myHop.startingLocation = myHop.startingLocation.map(function (loc) {\n    return _objectSpread({}, loc, {\n      __typename: 'startingLocation'\n    });\n  });\n  myHop.targetLocation.__typename = 'targetLocation';\n  console.log('myHop', myHop);\n  return myHop;\n};\n\nvar HopDiv = styled.div.withConfig({\n  displayName: \"HopSelection__HopDiv\",\n  componentId: \"gxte0x-0\"\n})([\"display:grid;grid-template-columns:1fr 2fr 5fr 2fr;margin:10px;justify-items:center;align-items:center;\"]);\nvar Difficulty = styled(MdBlurCircular).withConfig({\n  displayName: \"HopSelection__Difficulty\",\n  componentId: \"gxte0x-1\"\n})([\"color:\", \";\"], function (props) {\n  return props.difficulty === 'easy' ? 'green' : props.difficulty === 'medium' ? 'yellow' : 'red';\n});\n\nvar HopSelection = function HopSelection() {\n  var _useQuery = useQuery(SELECTION_QUERY, {\n    variables: {\n      rangeInput: {\n        raFrom: 1,\n        raTo: 5,\n        decFrom: 0,\n        decTo: 50\n      }\n    }\n  }),\n      client = _useQuery.client,\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      refetch = _useQuery.refetch;\n\n  console.log('data', data);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), __jsx(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), !loading && data.selectedHop && __jsx(SelectedHop, {\n    selectedHop: data.selectedHop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), !loading && data.hops.map(function (hop) {\n    return __jsx(HopDiv, {\n      key: hop.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, hop.id), __jsx(Difficulty, {\n      size: 20,\n      difficulty: hop.difficulty,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, hop.description), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      onClick: function onClick() {\n        client.writeData({\n          data: {\n            selectedHop: hopToGQL(hop)\n          }\n        });\n        refetch();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Select\")));\n  }));\n};\n\nexport default HopSelection;","map":{"version":3,"sources":["/Users/kwilliams/repositories/starhop/pages/HopSelection.js"],"names":["React","styled","gql","useQuery","MdBlurCircular","Header","NavBar","SelectedHop","SELECTION_QUERY","hopToGQL","hop","myHop","__typename","starMapQuery","startingLocation","map","loc","targetLocation","console","log","HopDiv","div","Difficulty","props","difficulty","HopSelection","variables","rangeInput","raFrom","raTo","decFrom","decTo","client","data","loading","refetch","selectedHop","hops","id","description","writeData"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport { MdBlurCircular } from 'react-icons/md';\n\nimport Header from '../styles/Header';\nimport NavBar from '../components/NavBar';\nimport SelectedHop from '../components/starmap/SelectedHop';\n\nconst SELECTION_QUERY = gql`\n  query {\n    hops @client\n    selectedHop @client {\n      id\n      hint\n      description\n      difficulty\n      starMapQuery {\n        raFrom\n        raTo\n        decFrom\n        decTo\n      }\n      startingLocation {\n        name\n        ra\n        dec\n      }\n      targetLocation {\n        ra\n        dec\n      }\n    }\n  }\n`;\n\nconst hopToGQL = hop => {\n  const myHop = {\n    ...hop,\n    __typename: 'selectedHop'\n  };\n\n  myHop.starMapQuery.__typename = 'starMapQuery';\n  myHop.startingLocation = myHop.startingLocation.map(loc => {\n    return { ...loc, __typename: 'startingLocation' };\n  });\n  myHop.targetLocation.__typename = 'targetLocation';\n\n  console.log('myHop', myHop);\n  return myHop;\n};\n\nconst HopDiv = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 2fr 5fr 2fr;\n  margin: 10px;\n  justify-items: center;\n  align-items: center;\n`;\n\nconst Difficulty = styled(MdBlurCircular)`\n  color: ${props =>\n    props.difficulty === 'easy'\n      ? 'green'\n      : props.difficulty === 'medium'\n      ? 'yellow'\n      : 'red'};\n`;\n\nconst HopSelection = () => {\n  const { client, data, loading, refetch } = useQuery(SELECTION_QUERY, {\n    variables: { rangeInput: { raFrom: 1, raTo: 5, decFrom: 0, decTo: 50 } }\n  });\n\n  console.log('data', data);\n\n  return (\n    <div>\n      <Header />\n      <NavBar />\n\n      {!loading && data.selectedHop && (\n        <SelectedHop selectedHop={data.selectedHop} />\n      )}\n\n      {!loading &&\n        data.hops.map(hop => (\n          <HopDiv key={hop.id}>\n            <span>{hop.id}</span>\n            <Difficulty size={20} difficulty={hop.difficulty} />\n            <span>{hop.description}</span>\n            <span>\n              <button\n                onClick={() => {\n                  client.writeData({\n                    data: { selectedHop: hopToGQL(hop) }\n                  });\n                  refetch();\n                }}\n              >\n                Select\n              </button>\n            </span>\n          </HopDiv>\n        ))}\n    </div>\n  );\n};\n\nexport default HopSelection;\n"]},"metadata":{},"sourceType":"module"}