{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/kwilliams/repositories/starhop/pages/HopSelection.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport { MdBlurCircular } from 'react-icons/md';\nimport Header from '../styles/Header';\nimport NavBar from '../components/NavBar';\nimport { __Type } from 'graphql';\nconst DATA_QUERY = gql`\n  query dsos($rangeInput: Object!) {\n    dsos(input: $rangeInput) @client\n    stars(input: $rangeInput) @client\n  }\n`;\nconst SELECTION_QUERY = gql`\n  query {\n    hops @client\n  }\n`;\n\nconst hopToGQL = hop => {\n  const myHop = _objectSpread({}, hop, {\n    __typename: 'selectedHop'\n  });\n\n  myHop.starMapQuery.__typename = 'starMapQuery';\n  myHop.startingLocation = myHop.startingLocation.map(loc => {\n    return _objectSpread({}, loc, {\n      __typename: 'startingLocation'\n    });\n  });\n  myHop.targetLocation.__typename = 'targetLocation';\n  console.log('myHop', myHop);\n  return myHop;\n};\n\nconst HopDiv = styled.div.withConfig({\n  displayName: \"HopSelection__HopDiv\",\n  componentId: \"gxte0x-0\"\n})([\"display:grid;grid-template-columns:1fr 2fr 5fr 2fr;margin:10px;justify-items:center;align-items:center;\"]);\nconst Difficulty = styled(MdBlurCircular).withConfig({\n  displayName: \"HopSelection__Difficulty\",\n  componentId: \"gxte0x-1\"\n})([\"color:\", \";\"], props => props.difficulty === 'easy' ? 'green' : props.difficulty === 'medium' ? 'yellow' : 'red');\n\nconst HopSelection = () => {\n  const {\n    client,\n    data,\n    loading\n  } = useQuery(SELECTION_QUERY, {\n    variables: {\n      rangeInput: {\n        raFrom: 1,\n        raTo: 5,\n        decFrom: 0,\n        decTo: 50\n      }\n    }\n  });\n  console.log('data', data);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), __jsx(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), !loading && data.selectedHop && __jsx(SelectedHop, {\n    selectedHop: data.selectedHop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), !loading && data.hops.map(hop => __jsx(HopDiv, {\n    key: hop.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, hop.id), __jsx(Difficulty, {\n    size: 20,\n    difficulty: hop.difficulty,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, hop.description), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    onClick: () => {\n      client.writeData({\n        data: {\n          selectedHop: hopToGQL(hop)\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Select\")))));\n};\n\nexport default HopSelection;","map":{"version":3,"sources":["/Users/kwilliams/repositories/starhop/pages/HopSelection.js"],"names":["React","Link","styled","gql","useQuery","MdBlurCircular","Header","NavBar","__Type","DATA_QUERY","SELECTION_QUERY","hopToGQL","hop","myHop","__typename","starMapQuery","startingLocation","map","loc","targetLocation","console","log","HopDiv","div","Difficulty","props","difficulty","HopSelection","client","data","loading","variables","rangeInput","raFrom","raTo","decFrom","decTo","selectedHop","hops","id","description","writeData"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport { MdBlurCircular } from 'react-icons/md';\n\nimport Header from '../styles/Header';\nimport NavBar from '../components/NavBar';\nimport { __Type } from 'graphql';\n\nconst DATA_QUERY = gql`\n  query dsos($rangeInput: Object!) {\n    dsos(input: $rangeInput) @client\n    stars(input: $rangeInput) @client\n  }\n`;\n\nconst SELECTION_QUERY = gql`\n  query {\n    hops @client\n  }\n`;\n\nconst hopToGQL = hop => {\n  const myHop = {\n    ...hop,\n    __typename: 'selectedHop'\n  };\n\n  myHop.starMapQuery.__typename = 'starMapQuery';\n  myHop.startingLocation = myHop.startingLocation.map(loc => {\n    return { ...loc, __typename: 'startingLocation' };\n  });\n  myHop.targetLocation.__typename = 'targetLocation';\n\n  console.log('myHop', myHop);\n  return myHop;\n};\n\nconst HopDiv = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 2fr 5fr 2fr;\n  margin: 10px;\n  justify-items: center;\n  align-items: center;\n`;\n\nconst Difficulty = styled(MdBlurCircular)`\n  color: ${props =>\n    props.difficulty === 'easy'\n      ? 'green'\n      : props.difficulty === 'medium'\n      ? 'yellow'\n      : 'red'};\n`;\n\nconst HopSelection = () => {\n  const { client, data, loading } = useQuery(SELECTION_QUERY, {\n    variables: { rangeInput: { raFrom: 1, raTo: 5, decFrom: 0, decTo: 50 } }\n  });\n\n  console.log('data', data);\n\n  return (\n    <div>\n      <Header />\n      <NavBar />\n\n      {!loading && data.selectedHop && (\n        <SelectedHop selectedHop={data.selectedHop} />\n      )}\n\n      {!loading &&\n        data.hops.map(hop => (\n          <HopDiv key={hop.id}>\n            <span>{hop.id}</span>\n            <Difficulty size={20} difficulty={hop.difficulty} />\n            <span>{hop.description}</span>\n            <span>\n              <button\n                onClick={() => {\n                  client.writeData({\n                    data: { selectedHop: hopToGQL(hop) }\n                  });\n                }}\n              >\n                Select\n              </button>\n            </span>\n          </HopDiv>\n        ))}\n    </div>\n  );\n};\n\nexport default HopSelection;\n"]},"metadata":{},"sourceType":"module"}